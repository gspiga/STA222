c(MSR / MSE, NA, NA),
row.names = c("Regression", "Error", "Total")
)
names(ANOVAtable) <- c("SS", "d.f.", "MS", "F*")
ANOVAtable
Fstat <- MSR/MSE
critval <- qf(1 - 0.05, 1, n-2)
Fstat <- MSR/MSE
critval <- qf(1 - 0.05, 1, n-2)
Fstat > critval
critval
Fstat <- MSR/MSE
critval <- qf(1 - 0.01, 1, n-2)
critval
Fstat > critval
R2 <- SSR/SSTO
R2
R2 <- SSR/SSTO
R2
r <- (XiYi - (n*Xbar*Ybar)) / sqrt(Sxx * (Yi2 - n*(Ybar)^2))
r
r^2
r <- (XiYi - (n*Xbar*Ybar)) / sqrt(Sxx * (Yi2 - n*(Ybar)^2))
R2 <- SSR/SSTO
R2
r <- (XiYi - (n*Xbar*Ybar)) / sqrt(Sxx * (Yi2 - n*(Ybar)^2))
r
R2
r^2
r <- (XiYi - (n*Xbar*Ybar)) / sqrt(Sxx * (Yi2 - n*(Ybar)^2))
r
r^2
library(survival)
library(KMsurv)
library(ggplot2)
library(ggpubr)
library(survminer)
library(plotly)
library(muhaz)
library(ggthemes)
vars <- c("id", "clinic", "status", "time", "prison", "methadone")
addicts <-
read.table(
url(
"https://dmrocke.ucdavis.edu/Class/BST222.2022.Fall/addicts.txt"
),
header = F,
col.names = vars
)
#addicts
#change variables to factors to be used in Cox PH
addicts$clinic <- factor(addicts$clinic,labels=c("Clinic1","Clinic2"))
addicts$prison <- factor(addicts$prison,labels=c("No","Yes"))
head(addicts)
surv_object <- Surv(time = addicts$time, event = addicts$status)
addicts.cox <- coxph(surv_object ~ clinic + prison + methadone, data = addicts)
#summary(addicts.cox)
addicts.zph <- cox.zph(addicts.cox)
addicts.zph
#For clinic
ggcoxzph(addicts.zph[1], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-7,7))
#For prison
ggcoxzph(addicts.zph[2], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-4,4))
#For methadone/
ggcoxzph(addicts.zph[3], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-0.5,0.5))
addicts.mart <- residuals(addicts.cox, type = "martingale")
addicts.cs <- addicts$status - addicts.mart
#Cumulative hazard
surv.csr <- survfit(Surv(addicts.cs, addicts$status) ~1, type = "fleming-harrington", data = addicts)
#plot(surv.csr, fun ="cumhaz")
cumHazPlot <-
ggsurvplot(
surv.csr,
fun = "cumhaz",
conf.int = TRUE,
palette = c("#581845"),
ggtheme = theme_solarized()
) + ggtitle("Cumulative Hazard for Cox-Snell Residuals")
#ggplotly(cumHazPlot[[1]])
ggplotly(cumHazPlot$plot + geom_abline())
#This time, without methadone
addicts.coxNoMeth <- coxph(surv_object ~ clinic + prison, data = addicts)
addicts.mart <- residuals(addicts.cox, type = "martingale")
lowessOBJ <- as.data.frame(lowess(addicts$methadone, addicts.mart))
ggplotly(
ggplot() + aes(addicts$methadone, addicts.mart) + geom_point(col = "#FFA000") + labs(x = "Methadone", y = "Martingale Residuals", title = "Martingale Residuals vs. Methadone Dosage") + geom_line(data = lowessOBJ, aes(x = x, y = y), col = "#388E3C") + theme_solarized()
)
#Create categorical methadone
addicts$catMeth <-
cut(addicts$methadone,
c(0, 60, 79, 200),
labels = c("<60", "60-79", "80+"))
addicts$catMeth <- as.factor(addicts$catMeth)
#New cox model
addicts.coxCatMeth <-
coxph(surv_object ~ clinic + prison + catMeth, data = addicts)
#We print AIC using drop1
# This is with methadone as quantitative
drop1(addicts.cox, test = "Chisq")
#This is with methadone as categorical
drop1(addicts.coxCatMeth, test = "Chisq")
# With Linear predictor
addicts.predict <- predict(addicts.cox)
#Deviance and df beta
addicts.dev <- residuals(addicts.cox, type = "deviance")
addicts.dfb <- residuals(addicts.cox, type = "dfbeta")
#MArtingale vs Linear Predictor
ggplotly(
ggplot() + aes(
x = addicts.predict,
y = addicts.mart,
label = rownames(addicts)
) + geom_point() + labs(x = "Linear Predictor", y = "Martingale Residual", title = "Martingale Residuals vs Linear Predictor") + theme_solarized()
)
# Deviance vs Linear Predictor
ggplotly(
ggplot() + aes(
x = addicts.predict,
y = addicts.dev,
label = rownames(addicts)
) + geom_point() + labs(x = "Linear Predictor", y = "Deviance Residual", title = "Deviance Residuals vs Linear Predictor") + theme_solarized()
)
# DfBeta vs Linear Predictor
# Clinic
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 1]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Clinic Type", title = "dfbeta Values for Observation Number by Clinic Type") + theme_solarized()
)
# Prison
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 2]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Prison Status", title = "dfbeta Values for Observation Number by Prison Status") + theme_solarized()
)
#Methadone
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 3]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Methadone Level", title = "dfbeta Values for Observation Number by Methadone Level") + theme_solarized()
)
addicts[c(8, 26),]
#This time, without methadone
addicts.coxNoMeth <- coxph(surv_object ~ clinic + prison, data = addicts)
addicts.mart <- residuals(addicts.cox, type = "martingale")
lowessOBJ <- as.data.frame(lowess(addicts$methadone, addicts.mart))
ggplotly(
ggplot() + aes(addicts$methadone, addicts.mart) + geom_point(col = "#FFA000") + labs(x = "Methadone", y = "Martingale Residuals", title = "Martingale Residuals vs. Methadone Dosage") + geom_line(data = lowessOBJ, aes(x = x, y = y), col = "#388E3C") + theme_solarized()
)
#Create categorical methadone
addicts$catMeth <-
cut(addicts$methadone,
c(0, 60, 79, 200),
labels = c("<60", "60-79", "80+"))
addicts$catMeth <- as.factor(addicts$catMeth)
#New cox model
addicts.coxCatMeth <-
coxph(surv_object ~ clinic + prison + catMeth, data = addicts)
#We print AIC using drop1
# This is with methadone as quantitative
drop1(addicts.cox, test = "Chisq")
#This is with methadone as categorical
drop1(addicts.coxCatMeth, test = "Chisq")
addicts[c(8, 9, 26, 111),]
X
X <- cbind(rep(1,5), c(-0.63, 0.18, -0.84, 1.6, 0.33), c(-0.82, 0.49, 0.74, 0.58, -0.31))
Y <- c(-0.97, 2.51, -0.19, 6.53, 1)
# X'X
t(X) %*% X
#X'Y
t(X) %*% Y
# (X'X)^-1
solve(t(X) %*% X)
B <- solve(t(X) %*% X) %*% t(X) %*% Y
B
H <- X %*% solve(t(X) %*% X) %*% t(X)
H
sum(diag(H))
# Fitted values
Yhat <- X %*% B
Yhat
# Residuals
e <- Y - Yhat
e
#SSE
SSE <- sum((Y - Yhat)^2)
SSE
# MSE
MSE <- SSE / (5 - 3)
MSE
Xint <- cbind(X, X[,2] * X[,3])
Xint
Hint <- Xint %*% solve(t(Xint) %*% Xint) %*% t(Xint)
Hint
B.int <- solve(t(Xint) %*% Xint) %*% t(Xint) %*% Y
B.int
Yhat.int <- Xint %*% B.int
Yhat.int
# Residuals
e.int <- Y - Yhat.int
e.int
#SSE
SSE.int <- sum((Y - Yhat.int)^2)
SSE.int
# MSE
MSE.int <- SSE.int / (5 - 4)
MSE.int
X <- cbind(rep(1,5), c(-0.63, 0.18, -0.84, 1.6, 0.33), c(-0.82, 0.49, 0.74, 0.58, -0.31))
Y <- c(-0.97, 2.51, -0.19, 6.53, 1)
# X'X
t(X) %*% X
#X'Y
t(X) %*% Y
# (X'X)^-1
solve(t(X) %*% X)
B <- solve(t(X) %*% X) %*% t(X) %*% Y
B
H <- X %*% solve(t(X) %*% X) %*% t(X)
H
sum(diag(H))
# Fitted values
Yhat <- X %*% B
Yhat
# Residuals
e <- Y - Yhat
e
#SSE
SSE <- sum((Y - Yhat)^2)
SSE
# MSE
MSE <- SSE / (5 - 3)
MSE
Xint <- cbind(X, X[,2] * X[,3])
Xint
Hint <- Xint %*% solve(t(Xint) %*% Xint) %*% t(Xint)
Hint
B.int <- solve(t(Xint) %*% Xint) %*% t(Xint) %*% Y
B.int
Yhat.int <- Xint %*% B.int
Yhat.int
# Residuals
e.int <- Y - Yhat.int
e.int
#SSE
SSE.int <- sum((Y - Yhat.int)^2)
SSE.int
# MSE
MSE.int <- SSE.int / (5 - 4)
MSE.int
matrix(diag(1))
diag(3)
diag(5)
matrix(data = 1, nrow = 5, ncol = 5)
matrix(data = 1/5, nrow = 5, ncol = 5)
diag(5) - matrix(data = 1/5, nrow = 5, ncol = 5)
(diag(5) - matrix(data = 1/5, nrow = 5, ncol = 5)) %*% X
(diag(5) - matrix(data = 1/5, nrow = 5, ncol = 5)) %*% X %*% B
Yhat
Y
setwd("~/Github/STA222/Homework/HW5")
vars <- c("id", "clinic", "status", "time", "prison", "methadone")
addicts <-
read.table(
url(
"https://dmrocke.ucdavis.edu/Class/BST222.2022.Fall/addicts.txt"
),
header = F,
col.names = vars
)
#addicts
library(survival)
library(KMsurv)
library(ggplot2)
library(ggpubr)
library(survminer)
library(plotly)
library(muhaz)
library(ggthemes)
vars <- c("id", "clinic", "status", "time", "prison", "methadone")
addicts <-
read.table(
url(
"https://dmrocke.ucdavis.edu/Class/BST222.2022.Fall/addicts.txt"
),
header = F,
col.names = vars
)
#addicts
#change variables to factors to be used in Cox PH
addicts$clinic <-
factor(addicts$clinic, labels = c("Clinic1", "Clinic2"))
addicts$prison <- factor(addicts$prison, labels = c("No", "Yes"))
head(addicts)
surv_object <- Surv(time = addicts$time, event = addicts$status)
addicts.cox <-
coxph(surv_object ~ strata(clinic) + prison + methadone, data = addicts)
summary(addicts.cox)
#change variables to factors to be used in Cox PH
addicts$clinic <-
factor(addicts$clinic, labels = c("Clinic1", "Clinic2"))
addicts$prison <- factor(addicts$prison, labels = c("No", "Yes"))
#head(addicts)
surv_object <- Surv(time = addicts$time, event = addicts$status)
addicts.cox.strat <-
coxph(surv_object ~ strata(clinic) + prison + methadone, data = addicts)
summary(addicts.cox.strat)
addicts.zph.stra <- cox.zph(addicts.cox.strat)
addicts.zph.stra
#For clinic
ggcoxzph(addicts.zph.stra[1], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-7,7))
#For methadone/
ggcoxzph(addicts.zph[4], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-0.5,0.5))
#For methadone/
ggcoxzph(addicts.zph.stra[4], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-0.5,0.5))
addicts.zph.stra
#For methadone/
ggcoxzph(addicts.zph.stra[3], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-0.5,0.5))
addicts.zph.stra <- cox.zph(addicts.cox.strat)
addicts.zph.stra
#For clinic
ggcoxzph(addicts.zph.stra[1], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-7,7))
#For prison
ggcoxzph(addicts.zph.stra[2], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-4,4))
#For clinic
ggcoxzph(addicts.zph.stra[1], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-4,4))
#For prison
ggcoxzph(addicts.zph.stra[2], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-0.3,0.3))
addicts.zph.stra <- cox.zph(addicts.cox.strat)
addicts.zph.stra
#For clinic
ggcoxzph(addicts.zph.stra[1], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-4,4))
#For prison
ggcoxzph(addicts.zph.stra[2], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-0.3,0.3))
#For clinic
ggplotly(ggcoxzph(addicts.zph.stra[1], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-4,4)))
addicts.zph.stra <- cox.zph(addicts.cox.strat)
addicts.zph.stra
#For clinic
ggcoxzph(addicts.zph.stra[1], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-4,4))
#For prison
ggcoxzph(addicts.zph.stra[2], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-0.3,0.3))
```{r, warning = FALSE}
```{r, warning = FALSE}
addicts.mart <- residuals(addicts.cox.strat, type = "martingale")
addicts.mart <- residuals(addicts.cox.strat, type = "martingale")
addicts.cs <- addicts$status - addicts.mart
#Cumulative hazard
surv.csr <- survfit(Surv(addicts.cs, addicts$status) ~1, type = "fleming-harrington", data = addicts)
#plot(surv.csr, fun ="cumhaz")
cumHazPlot <-
ggsurvplot(
surv.csr,
fun = "cumhaz",
conf.int = TRUE,
palette = c("#581845"),
ggtheme = theme_solarized()
) + ggtitle("Cumulative Hazard for Cox-Snell Residuals")
#ggplotly(cumHazPlot[[1]])
ggplotly(cumHazPlot$plot + geom_abline())
addicts.zph.stra <- cox.zph(addicts.cox.strat)
addicts.zph.stra
#For clinic
ggcoxzph(addicts.zph.stra[1], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-4,4))
#For prison
ggcoxzph(addicts.zph.stra[2], se = FALSE, font.main = 12, ggtheme = theme_solarized(), point.col = "#0096FF", ylim = c(-0.3,0.3))
#This time, without methadone
addicts.coxNoMeth <- coxph(surv_object ~ strata(clinic) + prison, data = addicts)
addicts.mart <- residuals(addicts.coxNoMeth, type = "martingale")
lowessOBJ <- as.data.frame(lowess(addicts$methadone, addicts.mart))
ggplotly(
ggplot() + aes(addicts$methadone, addicts.mart) + geom_point(col = "#FFA000") + labs(x = "Methadone", y = "Martingale Residuals", title = "Martingale Residuals vs. Methadone Dosage") + geom_line(data = lowessOBJ, aes(x = x, y = y), col = "#388E3C") + theme_solarized()
)
```{r}
# With Linear predictor
addicts.predict <- predict(addicts.cox.strat)
#Deviance and df beta
addicts.dev <- residuals(addicts.cox.strat, type = "deviance")
addicts.dfb <- residuals(addicts.cox.strat, type = "dfbeta")
#MArtingale vs Linear Predictor
ggplotly(
ggplot() + aes(
x = addicts.predict,
y = addicts.mart,
label = rownames(addicts)
) + geom_point() + labs(x = "Linear Predictor", y = "Martingale Residual", title = "Martingale Residuals vs Linear Predictor") + theme_solarized()
)
# Deviance vs Linear Predictor
ggplotly(
ggplot() + aes(
x = addicts.predict,
y = addicts.dev,
label = rownames(addicts)
) + geom_point() + labs(x = "Linear Predictor", y = "Deviance Residual", title = "Deviance Residuals vs Linear Predictor") + theme_solarized()
)
# DfBeta vs Linear Predictor
# Clinic
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 1]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Clinic Type", title = "dfbeta Values for Observation Number by Clinic Type") + theme_solarized()
)
# Prison
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 2]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Prison Status", title = "dfbeta Values for Observation Number by Prison Status") + theme_solarized()
)
#Methadone
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 3]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Methadone Level", title = "dfbeta Values for Observation Number by Methadone Level") + theme_solarized()
)
# With Linear predictor
addicts.predict <- predict(addicts.cox.strat)
#Deviance and df beta
addicts.dev <- residuals(addicts.cox.strat, type = "deviance")
addicts.dfb <- residuals(addicts.cox.strat, type = "dfbeta")
#MArtingale vs Linear Predictor
ggplotly(
ggplot() + aes(
x = addicts.predict,
y = addicts.mart,
label = rownames(addicts)
) + geom_point() + labs(x = "Linear Predictor", y = "Martingale Residual", title = "Martingale Residuals vs Linear Predictor") + theme_solarized()
)
# Deviance vs Linear Predictor
ggplotly(
ggplot() + aes(
x = addicts.predict,
y = addicts.dev,
label = rownames(addicts)
) + geom_point() + labs(x = "Linear Predictor", y = "Deviance Residual", title = "Deviance Residuals vs Linear Predictor") + theme_solarized()
)
# DfBeta vs Linear Predictor
# Clinic
# ggplotly(
#   ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 1]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Clinic Type", title = "dfbeta Values for Observation Number by Clinic Type") + theme_solarized()
# )
# Prison
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 1]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Prison Status", title = "dfbeta Values for Observation Number by Prison Status") + theme_solarized()
)
#Methadone
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 2]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Methadone Level", title = "dfbeta Values for Observation Number by Methadone Level") + theme_solarized()
)
# With Linear predictor
addicts.predict <- predict(addicts.cox.strat)
addicts.mart <- residuals(addicts.cox.strat, type = "martingale")
#Deviance and df beta
addicts.dev <- residuals(addicts.cox.strat, type = "deviance")
addicts.dfb <- residuals(addicts.cox.strat, type = "dfbeta")
#MArtingale vs Linear Predictor
ggplotly(
ggplot() + aes(
x = addicts.predict,
y = addicts.mart,
label = rownames(addicts)
) + geom_point() + labs(x = "Linear Predictor", y = "Martingale Residual", title = "Martingale Residuals vs Linear Predictor") + theme_solarized()
)
# Deviance vs Linear Predictor
ggplotly(
ggplot() + aes(
x = addicts.predict,
y = addicts.dev,
label = rownames(addicts)
) + geom_point() + labs(x = "Linear Predictor", y = "Deviance Residual", title = "Deviance Residuals vs Linear Predictor") + theme_solarized()
)
# DfBeta vs Linear Predictor
# Clinic
# ggplotly(
#   ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 1]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Clinic Type", title = "dfbeta Values for Observation Number by Clinic Type") + theme_solarized()
# )
# Prison
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 1]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Prison Status", title = "dfbeta Values for Observation Number by Prison Status") + theme_solarized()
)
#Methadone
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 2]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Methadone Level", title = "dfbeta Values for Observation Number by Methadone Level") + theme_solarized()
)
#Methadone
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 2]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Methadone Level", title = "dfbeta Values for Observation Number by Methadone Level") + theme_solarized()
)
# With Linear predictor
addicts.predict <- predict(addicts.cox.strat)
addicts.mart <- residuals(addicts.cox.strat, type = "martingale")
#Deviance and df beta
addicts.dev <- residuals(addicts.cox.strat, type = "deviance")
addicts.dfb <- residuals(addicts.cox.strat, type = "dfbeta")
#MArtingale vs Linear Predictor
ggplotly(
ggplot() + aes(
x = addicts.predict,
y = addicts.mart,
label = rownames(addicts)
) + geom_point() + labs(x = "Linear Predictor", y = "Martingale Residual", title = "Martingale Residuals vs Linear Predictor") + theme_solarized()
)
# Deviance vs Linear Predictor
ggplotly(
ggplot() + aes(
x = addicts.predict,
y = addicts.dev,
label = rownames(addicts)
) + geom_point() + labs(x = "Linear Predictor", y = "Deviance Residual", title = "Deviance Residuals vs Linear Predictor") + theme_solarized()
)
# DfBeta vs Linear Predictor
# Clinic
# ggplotly(
#   ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 1]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Clinic Type", title = "dfbeta Values for Observation Number by Clinic Type") + theme_solarized()
# )
# Prison
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 1]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Prison Status", title = "dfbeta Values for Observation Number by Prison Status") + theme_solarized()
)
#Methadone
ggplotly(
ggplot() + aes(x = as.numeric(rownames(addicts)), y = addicts.dfb[, 2]) + geom_point() + labs(x = "Observation Number", y = "dfbeta for Methadone Level", title = "dfbeta Values for Observation Number by Methadone Level") + theme_solarized()
)
addicts[c(8, 9, 26, 156),]
addicts[c(8, 9, 26, 156),]
addicts[c(8, 9, 26, 70, 156),]
