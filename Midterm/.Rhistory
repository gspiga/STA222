# MSE
MSE.int <- SSE.int / (5 - 4)
MSE.int
matrix(diag(1))
diag(3)
diag(5)
matrix(data = 1, nrow = 5, ncol = 5)
matrix(data = 1/5, nrow = 5, ncol = 5)
diag(5) - matrix(data = 1/5, nrow = 5, ncol = 5)
(diag(5) - matrix(data = 1/5, nrow = 5, ncol = 5)) %*% X
(diag(5) - matrix(data = 1/5, nrow = 5, ncol = 5)) %*% X %*% B
Yhat
Y
setwd("~/Github/STA206/Homework/HW5")
Xh <- c(1,0,0,0)
XtXinv <- matrix(cbind(c(0.087, -0.014, -0.035, -0.004), c(-0.014, 0.115, -0.012, -0.052), c(-0.035, -0.012, 0.057, -0.014),  c(-0.004, -0.052, -0.014, 0.050)))
XtXinv
XtXinv <- matrix(rbind(c(0.087, -0.014, -0.035, -0.004), c(-0.014, 0.115, -0.012, -0.052), c(-0.035, -0.012, 0.057, -0.014),  c(-0.004, -0.052, -0.014, 0.050)))
## Question 2
d.)
```{r}
Xh <- c(1,0,0,0)
XtXinv <- matrix(rbind(c(0.087, -0.014, -0.035, -0.004), c(-0.014, 0.115, -0.012, -0.052), c(-0.035, -0.012, 0.057, -0.014),  c(-0.004, -0.052, -0.014, 0.050)))
XtXinv
Xh <- c(1,0,0,0)
XtXinv <- matrix(cbind(c(0.087, -0.014, -0.035, -0.004), c(-0.014, 0.115, -0.012, -0.052), c(-0.035, -0.012, 0.057, -0.014),  c(-0.004, -0.052, -0.014, 0.050)), nrow = 2, ncol = 2)
XtXinv
XtXinv <- matrix(rbind(c(0.087, -0.014, -0.035, -0.004), c(-0.014, 0.115, -0.012, -0.052), c(-0.035, -0.012, 0.057, -0.014),  c(-0.004, -0.052, -0.014, 0.050)), nrow = 2, ncol = 2)
XtXinv
Xh <- c(1,0,0,0)
XtXinv <- matrix(rbind(c(0.087, -0.014, -0.035, -0.004), c(-0.014, 0.115, -0.012, -0.052), c(-0.035, -0.012, 0.057, -0.014),  c(-0.004, -0.052, -0.014, 0.050)), nrow = 4, ncol = 4)
XtXinv
SE.predh <- sqrt(1.040 * (1 + Xh %*% XtXinv %*% Xh))
SE.predh
SE.predh <- sqrt(1.040 * (1 + t(Xh) %*% XtXinv %*% Xh))
SE.predh
qt(1 - (0.05/2), 30 - 3)
qt(1 - (0.05/2), 30 - 4)
Xh <- c(1,0,0,0)
XtXinv <- matrix(rbind(c(0.087, -0.014, -0.035, -0.004), c(-0.014, 0.115, -0.012, -0.052), c(-0.035, -0.012, 0.057, -0.014),  c(-0.004, -0.052, -0.014, 0.050)), nrow = 4, ncol = 4)
XtXinv
SE.predh <- sqrt(1.040 * (1 + t(Xh) %*% XtXinv %*% Xh))
SE.predh
qt(1 - (0.05/2), 30 - 4)
c(0.9918 - (qt(1 - (0.05/2), 30 - 4) * SE.predh), 0.9918 + (qt(1 - (0.05/2), 30 - 4) * SE.predh))
pt(3.299, 26)
pt(3.299, 26, lower.tail = FALSE)
qt(4.464, df = 26, lower.tail = FALSE)
qt(4.464, df = 26)
qt(4.464, df = 26)
?qt
pt(4.464, df = 26)
pt(4.464, df = 26), lower.tail = F)
pt(4.464, df = 26 lower.tail = F)
pt(4.464, df = 26, lower.tail = F)
pt(abs(4.464), df = 26, lower.tail = F)
pt(-4.464, df = 26, lower.tail = F)
pt(-4.464, df = 26, lower.tail = T)
pt(-4.464, df = 26, lower.tail = T) * 2
property <- read.table("property.txt")
head(property)
property <- read.table("property.txt")
head(property)
colnames(property) <- c("Age", "Exp", "Vac.Rate", "Sq.Foot", "Ren.Rate")
property
library(ggplot2)
library(plotly)
library(ggplot2)
library(plotly)
property
class(property)
type(property)
class(property$Age)
dtypes(property)
ggplot(data = property, aes(x = Age)) + geom_histogram()
ggplot(data = property, aes(x = Age)) + geom_histogram(bins = 20)
ggplot(data = property, aes(x = Age)) + geom_histogram(bins = 50)
ggplot(data = property, aes(x = Age)) + geom_histogram(bins = 15)
ggplot(data = property, aes(x = Age)) + geom_histogram(bins = 10)
ggplot(data = property, aes(x = Age)) + geom_histogram(bins = 14)
ggplot(data = property, aes(x = Age)) + geom_histogram(bins = 14, fill = "#55A3C0")
summary(property$Age)
ggplot(data = property, aes(x = Age)) + geom_histogram(bins = 14, fill = "#55A3C0")
summary(property$Age)
ggplot(data = property, aes(x = Age)) + geom_histogram(bins = 10, fill = "#55A3C0")
ggplot(data = property, aes(x = Age)) + geom_bar(bins = 10, fill = "#55A3C0")
ggplot(data = property, aes(x = Age)) + geom_bar(bins = 5, fill = "#55A3C0")
ggplot(data = property, aes(x = Age)) + geom_bar(bins = 100, fill = "#55A3C0")
ggplot(data = property, aes(x = Age)) + geom_bar(bins = 10, fill = "#55A3C0")
ggplot(data = property, aes(x = Age)) + geom_hist(bins = 10, fill = "#55A3C0")
ggplot(data = property, aes(x = Age)) + geom_histogram(bins = 10, fill = "#55A3C0")
ggplot(data = property, aes(x = Exp)) + geom_histogram(bins = 10, fill = "#556EC0")
summary(property$Exp)
ggplot(data = property, aes(x = Exp)) + geom_histogram(bins = 5, fill = "#556EC0")
ggplot(data = property, aes(x = Exp)) + geom_histogram(bins = 10, fill = "#556EC0")
summary(property$Exp)
ggplot(data = property, aes(x = Exp)) + geom_histogram(bins = 10, fill = "#556EC0")
summary(property$Exp)
summary(property$Age)
summary(property$Exp)
ggplot(data = property, aes(x = Exp)) + geom_histogram(bins = 10, fill = "#556EC0")
summary(property$Exp)
ggplot(data = property, aes(x = Exp)) + geom_histogram(bins = 10, fill = "#556EC0")
summary(property$Exp)
ggplot(data = property, aes(x = Vac.Rate)) + geom_histogram(bins = 10, fill = "#7255C0")
summary(property$Vac.Rate)
ggplot(data = property, aes(x = Vac.Rate)) + geom_histogram(bins = 15, fill = "#7255C0")
summary(property$Vac.Rate)
ggplot(data = property, aes(x = Vac.Rate)) + geom_histogram(bins = 13, fill = "#7255C0")
summary(property$Vac.Rate)
summary(property$Vac.Rate)
ggplot(data = property, aes(x = Vac.Rate)) + geom_histogram(bins = 13, fill = "#7255C0")
summary(property$Vac.Rate)
property <- read.table("property.txt")
colnames(property) <-
c("Ren.Rate", "Age", "Exp", "Vac.Rate", "Sq.Foot")
property
ggplot(data = property, aes(x = Age)) + geom_histogram(bins = 10, fill = "#55A3C0")
summary(property$Age)
ggplot(data = property, aes(x = Ren.Rate)) + geom_histogram(bins = 10, fill = "#55A3C0")
summary(property$Ren.Rate)
ggplot(data = property, aes(x = Age)) + geom_histogram(bins = 10, fill = "#556EC0")
summary(property$Age)
ggplot(data = property, aes(x = Exp)) + geom_histogram(bins = 13, fill = "#7255C0")
summary(property$Exp)
ggplot(data = property, aes(x = Vac.Rate)) + geom_histogram(bins = 13, fill = "#7255C0")
summary(property$Vac.Rate)
ggplot(data = property, aes(x = Vac.Rate)) + geom_histogram(bins = 15, fill = "#7255C0")
ggplot(data = property, aes(x = Vac.Rate)) + geom_histogram(bins = 10, fill = "#7255C0")
ggplot(data = property, aes(x = Vac.Rate)) + geom_histogram(bins = 5, fill = "#7255C0")
10ummary(property$Vac.Rate)
ggplot(data = property, aes(x = Vac.Rate)) + geom_histogram(bins = 9, fill = "#7255C0")
summary(property$Vac.Rate)
ggplot(data = property, aes(x = Vac.Rate)) + geom_histogram(bins = 9, fill = "#7255C0")
summary(property$Vac.Rate)
ggplot(data = property, aes(x = Sq.Foot)) + geom_histogram(bins = 9, fill = "#7255C0")
summary(property$Sq.Foot)
ggplot(data = property, aes(x = Sq.Foot)) + geom_histogram(bins = 5, fill = "#7255C0")
summary(property$Sq.Foot)
ggplot(data = property, aes(x = Sq.Foot)) + geom_histogram(bins = 7, fill = "#7255C0")
library(GGally)
ggpairs(property)
ggplotly(ggpairs(property))
```{r, warning = FALSE}
ggplotly(ggpairs(property))
ggplotly(ggpairs(property, title = "Correlogram of Property Data"))
ggplotly(ggpairs(property, title = "Correlogram of Property Data"))
model1 <- lm(Ren.Rate ~ Age + Exp + Vac.Rate + Sq.Foot)
model1 <- lm(Ren.Rate ~ Age + Exp + Vac.Rate + Sq.Foot, data = property)
summary(model1)
model1 <- lm(Ren.Rate ~ Age + Exp + Vac.Rate + Sq.Foot, data = property)
summary(model1)
model1$coefficients
anova(model1)
#MSE
anova(model1)
#MSE
anova(model1)
model1$coefficients
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point()
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(xlab = "Fitted Values", ylab = "Residuals")
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", ylab = "Residuals")
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals")
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(muscle, aes(sample = mass)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(muscle, aes(sample = property)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(data, aes(sample = model$residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(model1, aes(sample = model$residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(model1, aes(sample = model1$residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
## Normal Q-Q plot
ggplot(model1, aes(sample = residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(model1, aes(sample = model1$residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(model1, aes(sample = model1$residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
# Residual Boxplot
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_box() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
# Residual Boxplot
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_boxplot() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(model1, aes(sample = model1$residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
# Residual Boxplot
ggplot() + aes(x = model1$residuals) + geom_boxplot() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(model1, aes(sample = model1$residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
# Residual Boxplot
ggplot() + aes(x = model1$residuals) + geom_boxplot() + labs(x = "Fitted Values", y = "Residuals")
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(model1, aes(sample = model1$residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
# Residual Boxplot
ggplot() + aes(x = model1$residuals) + geom_boxplot() + labs(y = "Residuals")
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(model1, aes(sample = model1$residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
# Residual Boxplot
ggplot() + aes(x = model1$residuals) + geom_boxplot() + labs(x = "Residuals")
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals", title = "Residuals vs. Fitted Values") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(model1, aes(sample = model1$residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
# Residual Boxplot
ggplot() + aes(x = model1$residuals) + geom_boxplot() + labs(x = "Residuals")
#Residuals vs Fitted Values
ggplot() + aes(x = model1$fitted.values, model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals", title = "Residuals vs. Fitted Values") + geom_abline(intercept = 0, slope = 0)
## Normal Q-Q plot
ggplot(model1, aes(sample = model1$residuals)) + stat_qq() + stat_qq_line() + labs(x = "Theoretical Quantiles", y = "Sample Quantiles", title = "Normal Q-Q")
# Residual Boxplot
ggplot() + aes(x = model1$residuals) + geom_boxplot() + labs(x = "Residuals")
ggplot() + aes(x = property$Age, y = model1$residuals) + geom_point() + labs(x = "Fitted Values", y = "Residuals", title = "Residuals vs. Age") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age
ggplot() + aes(x = property$Age, y = model1$residuals) + geom_point() + labs(x = "Age", y = "Residuals", title = "Residuals vs. Age") + geom_abline(intercept = 0, slope = 0)
ggplot() + aes(x = property$Exp, y = model1$residuals) + geom_point() + labs(x = "Operating Expenses", y = "Residuals", title = "Residuals vs. Age") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age
ggplot() + aes(x = property$Age, y = model1$residuals) + geom_point() + labs(x = "Age", y = "Residuals", title = "Residuals vs. Age") + geom_abline(intercept = 0, slope = 0)
ggplot() + aes(x = property$Exp, y = model1$residuals) + geom_point() + labs(x = "Operating Expenses", y = "Residuals", title = "Residuals vs. Operating Expenses") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age
ggplot() + aes(x = property$Age, y = model1$residuals) + geom_point() + labs(x = "Age", y = "Residuals", title = "Residuals vs. Age") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Operating Expenses
ggplot() + aes(x = property$Exp, y = model1$residuals) + geom_point() + labs(x = "Operating Expenses", y = "Residuals", title = "Residuals vs. Operating Expenses") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Operating Expenses
ggplot() + aes(x = property$Vac.Rate, y = model1$residuals) + geom_point() + labs(x = "Vacancy Rate", y = "Residuals", title = "Residuals vs. Vacancy Rate") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age
ggplot() + aes(x = property$Age, y = model1$residuals) + geom_point() + labs(x = "Age", y = "Residuals", title = "Residuals vs. Age") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Operating Expenses
ggplot() + aes(x = property$Exp, y = model1$residuals) + geom_point() + labs(x = "Operating Expenses", y = "Residuals", title = "Residuals vs. Operating Expenses") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Operating Expenses
ggplot() + aes(x = property$Vac.Rate, y = model1$residuals) + geom_point() + labs(x = "Vacancy Rate", y = "Residuals", title = "Residuals vs. Vacancy Rate") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Square Footage
ggplot() + aes(x = property$Sq.Foot, y = model1$residuals) + geom_point() + labs(x = "Square Footage", y = "Residuals", title = "Residuals vs. Square Footage") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age
ggplot() + aes(x = property$Age * property$Exp, y = model1$residuals) + geom_point() + labs(x = "Age*Expenses", y = "Residuals", title = "Residuals vs. Age*Expenses") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age
ggplot() + aes(x = property$Age, y = model1$residuals) + geom_point() + labs(x = "Age", y = "Residuals", title = "Residuals vs. Age") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Operating Expenses
ggplot() + aes(x = property$Exp, y = model1$residuals) + geom_point() + labs(x = "Operating Expenses", y = "Residuals", title = "Residuals vs. Operating Expenses") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Operating Expenses
ggplot() + aes(x = property$Vac.Rate, y = model1$residuals) + geom_point() + labs(x = "Vacancy Rate", y = "Residuals", title = "Residuals vs. Vacancy Rate") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Square Footage
ggplot() + aes(x = property$Sq.Foot, y = model1$residuals) + geom_point() + labs(x = "Square Footage", y = "Residuals", title = "Residuals vs. Square Footage") + geom_abline(intercept = 0, slope = 0)
### Interactions
#Residuals vs Age*Expenses
ggplot() + aes(x = property$Age * property$Exp, y = model1$residuals) + geom_point() + labs(x = "Age*Expenses", y = "Residuals", title = "Residuals vs. Age*Expenses") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age*Vac.Rate
ggplot() + aes(x = property$Age * property$Vac.Rate, y = model1$residuals) + geom_point() + labs(x = "Age*Vac.Rate", y = "Residuals", title = "Residuals vs. Age*Vac.Rate") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Expenses*VacRate
ggplot() + aes(x = property$Exp * property$Vac.Rate, y = model1$residuals) + geom_point() + labs(x = "Exp*Vac.Rate", y = "Residuals", title = "Residuals vs. Exp*Vac.Rate") + geom_abline(intercept = 0, slope = 0)
nrow(property)
#Residuals vs Expenses*Sq.Foot
ggplot() + aes(x = property$Exp * property$Sq.Foot, y = model1$residuals) + geom_point() + labs(x = "Exp*Sq.Foot", y = "Residuals", title = "Residuals vs. Exp*Sq.Foot") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age
ggplot() + aes(x = property$Age, y = model1$residuals) + geom_point() + labs(x = "Age", y = "Residuals", title = "Residuals vs. Age") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Operating Expenses
ggplot() + aes(x = property$Exp, y = model1$residuals) + geom_point() + labs(x = "Operating Expenses", y = "Residuals", title = "Residuals vs. Operating Expenses") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Operating Expenses
ggplot() + aes(x = property$Vac.Rate, y = model1$residuals) + geom_point() + labs(x = "Vacancy Rate", y = "Residuals", title = "Residuals vs. Vacancy Rate") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Square Footage
ggplot() + aes(x = property$Sq.Foot, y = model1$residuals) + geom_point() + labs(x = "Square Footage", y = "Residuals", title = "Residuals vs. Square Footage") + geom_abline(intercept = 0, slope = 0)
### Interactions
#Residuals vs Age*Expenses
ggplot() + aes(x = property$Age * property$Exp, y = model1$residuals) + geom_point() + labs(x = "Age*Expenses", y = "Residuals", title = "Residuals vs. Age*Expenses") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age*Vac.Rate
ggplot() + aes(x = property$Age * property$Vac.Rate, y = model1$residuals) + geom_point() + labs(x = "Age*Vac.Rate", y = "Residuals", title = "Residuals vs. Age*Vac.Rate") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age*Sq.Foot
ggplot() + aes(x = property$Age * property$Sq.Foot, y = model1$residuals) + geom_point() + labs(x = "Age*Sq.Foot", y = "Residuals", title = "Residuals vs. Age*Sq.Foot") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Expenses*VacRate
ggplot() + aes(x = property$Exp * property$Vac.Rate, y = model1$residuals) + geom_point() + labs(x = "Exp*Vac.Rate", y = "Residuals", title = "Residuals vs. Exp*Vac.Rate") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Expenses*Sq.Foot
ggplot() + aes(x = property$Exp * property$Sq.Foot, y = model1$residuals) + geom_point() + labs(x = "Exp*Sq.Foot", y = "Residuals", title = "Residuals vs. Exp*Sq.Foot") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Vac.Rate*Sq.Foot
ggplot() + aes(x = property$Vac.Rate * property$Sq.Foot, y = model1$residuals) + geom_point() + labs(x = "Vac.Rate*Sq.Foot", y = "Residuals", title = "Residuals vs. Vac.Rate*Sq.Foot") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age
ggplot() + aes(x = property$Age, y = model1$residuals) + geom_point() + labs(x = "Age", y = "Residuals", title = "Residuals vs. Age") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Operating Expenses
ggplot() + aes(x = property$Exp, y = model1$residuals) + geom_point() + labs(x = "Operating Expenses", y = "Residuals", title = "Residuals vs. Operating Expenses") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Operating Expenses
ggplot() + aes(x = property$Vac.Rate, y = model1$residuals) + geom_point() + labs(x = "Vacancy Rate", y = "Residuals", title = "Residuals vs. Vacancy Rate") + geom_abline(intercept = 0, slope = 0)
# Residuals vs Square Footage
ggplot() + aes(x = property$Sq.Foot, y = model1$residuals) + geom_point() + labs(x = "Square Footage", y = "Residuals", title = "Residuals vs. Square Footage") + geom_abline(intercept = 0, slope = 0)
### Interactions
#Residuals vs Age*Expenses
ggplot() + aes(x = property$Age * property$Exp, y = model1$residuals) + geom_point() + labs(x = "Age*Expenses", y = "Residuals", title = "Residuals vs. Age*Expenses") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age*Vac.Rate
ggplot() + aes(x = property$Age * property$Vac.Rate, y = model1$residuals) + geom_point() + labs(x = "Age*Vac.Rate", y = "Residuals", title = "Residuals vs. Age*Vac.Rate") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Age*Sq.Foot
ggplot() + aes(x = property$Age * property$Sq.Foot, y = model1$residuals) + geom_point() + labs(x = "Age*Sq.Foot", y = "Residuals", title = "Residuals vs. Age*Sq.Foot") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Expenses*VacRate
ggplot() + aes(x = property$Exp * property$Vac.Rate, y = model1$residuals) + geom_point() + labs(x = "Exp*Vac.Rate", y = "Residuals", title = "Residuals vs. Exp*Vac.Rate") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Expenses*Sq.Foot
ggplot() + aes(x = property$Exp * property$Sq.Foot, y = model1$residuals) + geom_point() + labs(x = "Exp*Sq.Foot", y = "Residuals", title = "Residuals vs. Exp*Sq.Foot") + geom_abline(intercept = 0, slope = 0)
#Residuals vs Vac.Rate*Sq.Foot
ggplot() + aes(x = property$Vac.Rate * property$Sq.Foot, y = model1$residuals) + geom_point() + labs(x = "Vac.Rate*Sq.Foot", y = "Residuals", title = "Residuals vs. Vac.Rate*Sq.Foot") + geom_abline(intercept = 0, slope = 0)
summary(model1)
anova(model1)
anova(model1)
14.819 + 72.802 + 8.381 + 42.325
98.231 + 138.327
Fstar <- (138.327 / 4) / (98.231 / 76)
Fstar
qf(0.01, 4, 76)
pf(Fstar, 4, 76)
pf(Fstar, 4, 76, lower.tail = FALSE)
summary(model1)
model2 <- lm(Ren.Rate ~ Age + Exp + Sq.Foot, data = property)
summary(model2)
model2$coefficients
summary(model2)
sumModel2 <- summary(model2)
sumModel2$residuals^2
sum(sumModel2$residuals^2)
anova(model2)
sumModel2$coefficients
sumModel2$coefficients
sumModel2$coefficients
sumModel2$coefficients[,2]
sumModel2$coefficients[,2]
sumModel2$coefficients[,2]
sumModel1$coefficients[,2]
sumModel1 <- summary(model1)
sumModel2 <- summary(model2)
sumModel1$coefficients[,2]
sumModel2$coefficients[,2]
sumModel2
sumModel2$coefficients
#confidence intervals
sumModel2$coefficients[,1]
#confidence intervals
sumModel2$coefficients[,1] * sumModel2$coefficients[,2]
#confidence intervals
sumModel2$coefficients[,1] - sumModel2$coefficients[,2]
tval <- qt(1 - (0.01/2), nrow(property) - 4)
tval
tval <- qt(1 - (0.01/2), nrow(property) - 4)
#confidence intervals lower bound
sumModel2$coefficients[,1] - tval * sumModel2$coefficients[,2]
#Upper bound
sumModel2$coefficients[,1] - tval * sumModel2$coefficients[,2]
tval <- qt(1 - (0.01/2), nrow(property) - 4)
#confidence intervals lower bound
sumModel2$coefficients[,1] - tval * sumModel2$coefficients[,2]
#Upper bound
sumModel2$coefficients[,1] + tval * sumModel2$coefficients[,2]
#confidence intervals lower bound
rbind(sumModel2$coefficients[,1] - tval * sumModel2$coefficients[,2], sumModel2$coefficients[,1] + tval * sumModel2$coefficients[,2])
#confidence intervals lower bound
t(rbind(sumModel2$coefficients[,1] - tval * sumModel2$coefficients[,2], sumModel2$coefficients[,1] + tval * sumModel2$coefficients[,2]))
predict(model1, data.frame(Age = 4, Exp = 10, Vac.Rate = 0.1, Sq.Foot = 80,000), type = "prediction")
predict(model1, data.frame(Age = 4, Exp = 10, Vac.Rate = 0.1, Sq.Foot = 80,000), interval = "prediction")
# Prediction for model 1
predict(model1, data.frame(Age = 4, Exp = 10, Vac.Rate = 0.1, Sq.Foot = 80,000), interval = "prediction")
# Prediction for model 2
predict(model2, data.frame(Age = 4, Exp = 10, Sq.Foot = 80,000), interval = "prediction")
# Prediction for model 1
predict(model1, data.frame(Age = 4, Exp = 10, Vac.Rate = 0.1, Sq.Foot = 80,000), interval = "prediction", level = 0.99)
# Prediction for model 2
predict(model2, data.frame(Age = 4, Exp = 10, Sq.Foot = 80,000), interval = "prediction", level = 0.99)
# Prediction for model 1
predict(model1, data.frame(Age = 4, Exp = 10, Vac.Rate = 0.1, Sq.Foot = 80,000), interval = "prediction", level = 0.99)
# Prediction for model 2
predict(model2, data.frame(Age = 4, Exp = 10, Sq.Foot = 80,000), interval = "prediction", level = 0.99)
17.60305 - 11.42732
# Prediction for model 1
predict(model1, data.frame(Age = 4, Exp = 10, Vac.Rate = 0.1, Sq.Foot = 80,000), interval = "prediction", level = 0.99)
# Prediction for model 2
predict(model2, data.frame(Age = 4, Exp = 10, Sq.Foot = 80,000), interval = "prediction", level = 0.99)
17.60305 - 11.42732
17.53121 - 11.40128
setwd("~/Github/STA222/Midterm")
data(burn)
burn1 <- burn
library(survival)
library(KMsurv)
library(ggplot2)
library(ggpubr)
library(survminer)
library(plotly)
library(muhaz)
library(ggthemes)
data(burn)
burn1 <- burn
burn1 <-
data.frame(burn1, Treatment = factor(burn1$Z1, labels = c("Routine", "Cleansing")))
burn1 <-
data.frame(burn1, Gender = factor(burn1$Z2, labels = c("Male", "Female")))
burn1 <-
data.frame(burn1, Race = factor(burn1$Z3, labels = c("Nonwhite", "White")))
burn1 <- data.frame(burn1, PercentBurned = burn1$Z4)
burn1 <-
data.frame(burn1, SiteHead = factor(burn1$Z5, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, SiteButtock = factor(burn1$Z6, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, SiteTrunk = factor(burn1$Z7, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, SiteUpperLeg = factor(burn1$Z8, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, SiteLowerLeg = factor(burn1$Z9, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, SiteRespTract = factor(burn1$Z10, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, BurnType = factor(burn1$Z11, labels = c("Chemical", "Scald", "Electric", "Flame")))
burn1.surv <- with(burn1, Surv(T3, D3))
plot(survfit(burn1.surv ~ Treatment, data = burn1),
col = 1:2,
lwd = 2)
title("Time to Infection for Routine Care and Total Body Cleansing")
legend(
"topright",
c("Routine Care", "Total Body Cleansing"),
col = 1:2,
lwd = 2
)
print(survdiff(burn1.surv ~ Treatment, data = burn1))
# Plot the Kaplan Meier Curves
KMcurves <- survfit(burn1.surv ~ Treatment, data = burn)
# Plot the Kaplan Meier Curves
KMcurves <- survfit(burn1.surv ~ Treatment, data = burn1)
KMplot <- ggsurvplot(KMcurves) + labs(title = "Time to Infection for Routine Care and Total Body Cleansing")
ggplotly(KMplot[[1]])
# Plot the Kaplan Meier Curves
KMcurves <- survfit(burn1.surv ~ Treatment, data = burn1)
KMplot <- ggsurvplot(KMcurves) + labs(title = "KM Curves for Time to Infection for Routine Care and Total Body Cleansing")
ggplotly(KMplot[[1]])
# Plot the Kaplan Meier Curves
KMcurves <- survfit(burn1.surv ~ Treatment, data = burn1)
KMplot <- ggsurvplot(KMcurves) + labs(title = "KM Curves for Time to Infection for Routine Care and Total Body Cleansing")
ggplotly(KMplot[[1]])
# Plot the Kaplan Meier Curves
KMcurves <- survfit(burn1.surv ~ Treatment, data = burn1)
KMplot <- ggsurvplot(KMcurves) + labs(title = "KM Curves for Time to Infection for Routine Care \n and Total Body Cleansing")
ggplotly(KMplot[[1]])
# Plot the Kaplan Meier Curves
KMcurves <- survfit(burn1.surv ~ Treatment, data = burn1)
KMplot <- ggsurvplot(KMcurves, ggtheme = theme_fivethirtyeight()) + labs(title = "KM Curves for Time to Infection for Routine Care \n and Total Body Cleansing")
ggplotly(KMplot[[1]])
# Plot the Kaplan Meier Curves
KMcurves <- survfit(burn1.surv ~ Treatment, data = burn1)
KMplot <- ggsurvplot(KMcurves, ggtheme = theme_fivethirtyeight()) + labs(title = "KM Curves for Time to Infection for Routine Care \n and Total Body Cleansing")
ggplotly(KMplot[[1]])
burn1
library(survival)
library(KMsurv)
library(ggplot2)
library(ggpubr)
library(survminer)
library(plotly)
library(muhaz)
library(ggthemes)
data(burn)
burn1 <- burn
burn1 <-
data.frame(burn1, Treatment = factor(burn1$Z1, labels = c("Routine", "Cleansing")))
burn1 <-
data.frame(burn1, Gender = factor(burn1$Z2, labels = c("Male", "Female")))
burn1 <-
data.frame(burn1, Race = factor(burn1$Z3, labels = c("Nonwhite", "White")))
burn1 <- data.frame(burn1, PercentBurned = burn1$Z4)
burn1 <-
data.frame(burn1, SiteHead = factor(burn1$Z5, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, SiteButtock = factor(burn1$Z6, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, SiteTrunk = factor(burn1$Z7, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, SiteUpperLeg = factor(burn1$Z8, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, SiteLowerLeg = factor(burn1$Z9, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, SiteRespTract = factor(burn1$Z10, labels = c("NotBurned", "Burned")))
burn1 <-
data.frame(burn1, BurnType = factor(burn1$Z11, labels = c("Chemical", "Scald", "Electric", "Flame")))
burn1.surv <- with(burn1, Surv(T3, D3))
# plot(survfit(burn1.surv ~ Treatment, data = burn1),
#      col = 1:2,
#      lwd = 2)
# title("Time to Infection for Routine Care and Total Body Cleansing")
# legend(
#   "topright",
#   c("Routine Care", "Total Body Cleansing"),
#   col = 1:2,
#   lwd = 2
# )
print(survdiff(burn1.surv ~ Treatment, data = burn1))
# Plot the Kaplan Meier Curves
KMcurves <- survfit(burn1.surv ~ Treatment, data = burn1)
KMplot <- ggsurvplot(KMcurves, ggtheme = theme_fivethirtyeight()) + labs(title = "KM Curves for Time to Infection for Routine Care \n and Total Body Cleansing")
ggplotly(KMplot[[1]])
